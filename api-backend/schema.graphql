type Product {
    id: ID!
    product_id: String!
    title: String
    category: String
    description: String
    rating: [Int!]
}

type ProductCount {
    count: Int!
}

type Query {
    "Query used to return all Product objects in the database."
    getProducts: [Product]

    "Query used to count number of database objects -> returns an INT."
    countProducts: ProductCount!
}

"""Inputs for updateProducts: title + category = not required, description = required."""
input ProductUpdateInputs {
    title: String
    category: String
    description: String!
}

type Mutation {
    "Mutation used to add document entries into the database."
    addProducts(product_id: String!, title: String!, category: String!, description: String!, rating: [Int!]!): Product

    "Mutation used to update a document from the database based on product_id."
    updateProducts(product_id: String!, changes: ProductUpdateInputs!): Product!
}